from flask import Flask, request, redirect, url_for, render_template
import os
import zipfile
import subprocess

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['ALLOWED_EXTENSIONS'] = {'zip'}

if not os.path.exists(app.config['UPLOAD_FOLDER']):
    os.makedirs(app.config['UPLOAD_FOLDER'])

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in app.config['ALLOWED_EXTENSIONS']

@app.route('/')
def upload_form():
    return render_template('upload.html')

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return redirect(request.url)
    file = request.files['file']
    if file.filename == '':
        return redirect(request.url)
    if file and allowed_file(file.filename):
        filepath = os.path.join(app.config['UPLOAD_FOLDER'], file.filename)
        file.save(filepath)
        scan_result = scan_file(filepath)
        return render_template('result.html', result=scan_result)
    return redirect(request.url)

def scan_file(filepath):
    with zipfile.ZipFile(filepath, 'r') as zip_ref:
        zip_ref.extractall(app.config['UPLOAD_FOLDER'])
        extracted_files = zip_ref.namelist()
        
    results = []
    for filename in extracted_files:
        extracted_filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        result = subprocess.run(['clamscan', extracted_filepath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        results.append(result.stdout.decode())
    return results

if __name__ == '__main__':
    app.run(debug=True)
